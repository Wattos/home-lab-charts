
# General Settings towards servarr
app: # one of: lidarr, radarr, readarr, sonarr, prowlarr

appConfig:
    bindAddress: "*"
    sslPort: 9898
    enableSsl: False
    launchBrowser: True
    apiKey: "random-key"
    authenticationMethod: "Forms"
    branch: "master"
    logLevel: "info"
    sslCertPath: ""
    sslCertPassword: ""
    urlBase: ""
    instanceName:
    updateMechanism: "Docker"
    authenticationRequired: "Enabled"
    syslogPort: 514
    analyticsEnabled: "False"

    postgresHost:
    PostgresPort:
    PostgresUser:
    PostgresPassword:
    PostgresMainDb:
    postgresLogDb:

servarr:
  # How many replicas of the service should run
  replicaCount: 1

  # user id and group id to run as
  uid: 1000
  gid: 1000

  # Timezone information
  timezone: "Etc/UTC"

  ingress:
    enabled: true
    annotations: {}

    # The host under which the app will be available in the cluster
    host: 

  media:
    volume:
      nfs:
        server:
        path:

  config:
    # The name of the storage class for the persistant volume
    storage:
      className: # the storage class name to use
      size: "200Mi"

# per app configuration
lidarr:
  image: lscr.io/linuxserver/lidarr
  version: latest

  container:
    port: 8686
  
  media:
    enabled: true

radarr:
  image: lscr.io/linuxserver/radarr
  version: latest

  container:
    port: 7878
  
  media:
    enabled: true

readarr:
  image: lscr.io/linuxserver/readarr
  version: develop

  container:
    port: 8787

  media:
    enabled: true

sonarr:
  image: lscr.io/linuxserver/sonarr
  version: latest

  container:
    port: 8989

  media:
    enabled: true

prowlarr:
  image: linuxserver/prowlarr
  version: latest

  container:
    port: 9696

  media:
    enabled: false